{"version":3,"file":"mftracking.js","sources":["widgets/mftracking/widget/src/mftracking.js"],"names":["dojo","provide","require","mf","addons","inputargs","title","recordBtn","clearStatBtn","displayBtn","liveMfBtn","oldActionFunction","isOverWritten","oldAction","redrawTimer","graphDlg","mfStatDict","width","isDataUpdated","height","eventHandlers","summerizeTooltip","liveMfTooltip","summerizeChartId","liveMfChartId","earliestTime","lastestTime","displayProp","d","sumData","duration","called_num","postCreate","mxui","dom","addCss","console","log","this","createInterface","actLoaded","query","createSummerizedToolTip","createLiveMfTooltip","mftrackingDiv","div","class","setAttribute","body","createButtons","appendChild","destroyBtnHandlers","$","create","recHandler","connect","startStopRecord","bind","push","style","color","clearHandler","clearCollectedData","liveMfHandler","toggleChart","displayHandler","resetMxDataAction","clearInterval","overwriteFunc","createSummerizeGraph","setInterval","createGraphs","createLiveMfGraph","getParentOfChart","chartId","chart","d3","select","parentNode","sender","container","curDisplay","display","initGraph","config","parendNodeId","margin","innerWidth","left","right","innerHeight","top","bottom","existedChart","svg","append","attr","call","tooltip","text","configObj","updateSummerizedData","tip","offset","direction","html","parseInt","error","success","summerizeData","colData","sum","forEach","aResult","finish","start","formatMiliSec","selectAll","remove","statData","entries","dataForAMf","value","data","sort","e1","e2","x","scale","ordinal","domain","map","split","rangeRoundBands","xAxisFunc","axis","orient","y","linear","max","range","yAxisFunc","tickSize","tickFormat","ticks","barWidth","rangeBand","bar","key","barUpdate","transition","barEnter","enter","on","show","hide","exit","yAxis","updateLiveMfData","extractLiveItems","result","mfRecord","mfName","length","splice","mfTitleWidth","marginLeft","mfHeight","mfDis","index","latencyMfFunc","liveMfs","liveMfUpdate","i","liveMfEnter","applyContext","context","callback","overwriteMxCalls","logMfActionResult","startTime","endTime","resultLength","isSuccess","numOfObjs","overwriteMxDataAction","_oldActionFunction","mx","action","thisWidget","params","Date","getTime","actionname","oldMfCallback","objs","apply","arguments","oldMfError","overwriteOnError","gOldOnError","window","onerror","errorMsg","url","lineNumber","overwriteConsoleError","olderrlogger","e","handler","disconnect","uninitialize","mendix","widget","declare"],"mappings":"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","sourcesContent":["dojo.provide(\"mftracking.widget.mftracking\");\r\ndojo.require(\"mftracking.widget.lib.d3\");\r\ndojo.require(\"mftracking.widget.lib.d3_tip\");\r\n\r\nmf = {\r\n    addons: [],\r\n    inputargs: {\r\n        title: ''\r\n    },\r\n    recordBtn: null,\r\n    clearStatBtn: null,\r\n    displayBtn: null,\r\n    liveMfBtn: null,\r\n    oldActionFunction: {isOverWritten: false, oldAction: null, redrawTimer: null},\r\n    graphDlg: null,\r\n    mfStatDict: {}, //todo: a class for this\r\n    width: 800,\r\n    isDataUpdated: false,\r\n    height: 500,\r\n    eventHandlers: [],\r\n    summerizeTooltip: null,\r\n    liveMfTooltip: null,\r\n    summerizeChartId: \"mfchart\",\r\n    liveMfChartId: \"livemfchart\",\r\n    earliestTime: null,\r\n    lastestTime: null,\r\n    displayProp: function(d) {\r\n        return d.sumData.duration / d.sumData.called_num;\r\n    },\r\n    postCreate: function() {\r\n        mxui.dom.addCss(\"widgets/mftracking/widget/lib/mftracking.css\");\r\n        console.log(\"initializing...\");\r\n        this.createInterface();\r\n        this.actLoaded();\r\n    },\r\n    createInterface: function() {\r\n         if (!dojo.query(\"#mftracking\")[0]) {\r\n            if (!this.summerizeTooltip)\r\n                this.summerizeTooltip = this.createSummerizedToolTip();\r\n            if (!this.liveMfTooltip)\r\n                this.liveMfTooltip = this.createLiveMfTooltip();       \r\n            var mftrackingDiv = mxui.dom.div({'class': \"mftracking\"});\r\n            mftrackingDiv.setAttribute(\"id\", 'mftracking');//set ID\r\n            var body = dojo.query(\"body\")[0];\r\n            this.createButtons(mftrackingDiv);\r\n            body.appendChild(mftrackingDiv);//add as node\r\n        }\r\n    },\r\n    createButtons: function(mftrackingDiv) {\r\n        this.destroyBtnHandlers();//if any\r\n        var $ = mxui.dom.create;\r\n        //record\r\n        this.recordBtn = $(\"button\", {\"class\": \"btn btn-primary record-btn\", \"title\": \"Record\"}, $(\"i\", {\"class\": \"glyphicon glyphicon-record\"}, \"\"));\r\n        var recHandler = dojo.connect(this.recordBtn, \"click\", this.startStopRecord.bind(this));\r\n        mftrackingDiv.appendChild(this.recordBtn);\r\n        this.eventHandlers.push(recHandler);\r\n        //if is currently recording\r\n        if (this.oldActionFunction.isOverWritten) {//recording\r\n            this.recordBtn.style.color = \"red\";\r\n        }\r\n        //clear\r\n        this.clearStatBtn = $(\"button\", {\"class\": \"btn btn-primary clear-btn\", \"title\": \"Clear\"}, $(\"i\", {\"class\": \"glyphicon glyphicon-ban-circle\"}, \"\"));\r\n        var clearHandler = dojo.connect(this.clearStatBtn, \"click\", this.clearCollectedData.bind(this));\r\n        mftrackingDiv.appendChild(this.clearStatBtn);\r\n        this.eventHandlers.push(clearHandler);\r\n        //activity in live\r\n        this.liveMfBtn = $(\"button\", {\"class\": \"btn btn-primary livemf-btn\", \"title\": \"Live\"}, $(\"i\", {\"class\": \"glyphicon glyphicon-eye-open\"}, \"\"));\r\n        var liveMfHandler = dojo.connect(this.liveMfBtn, \"click\", this.toggleChart.bind(this, this.liveMfChartId, this.liveMfBtn));\r\n        mftrackingDiv.appendChild(this.liveMfBtn);\r\n        this.eventHandlers.push(liveMfHandler);\r\n        //display\r\n        this.displayBtn = $(\"button\", {\"class\": \"btn btn-primary display-btn\", \"title\": \"Summary\"}, $(\"i\", {\"class\": \"glyphicon glyphicon-stats\"}, \"\"));\r\n        var displayHandler = dojo.connect(this.displayBtn, \"click\", this.toggleChart.bind(this, this.summerizeChartId, this.displayBtn));\r\n        mftrackingDiv.appendChild(this.displayBtn);\r\n        this.eventHandlers.push(displayHandler);\r\n\r\n    },\r\n    startStopRecord: function() {\r\n        if (!this.oldActionFunction.isOverWritten) {//start\r\n            this.overwriteFunc();\r\n            this.recordBtn.style.color = \"red\";\r\n            if (this.oldActionFunction.redrawTimer === null) {\r\n                (this.createSummerizeGraph.bind(this))();\r\n                this.oldActionFunction.redrawTimer = setInterval(this.createGraphs.bind(this), 1000);//redraw every 1s\r\n            }\r\n        }\r\n        else {//stop\r\n            this.resetMxDataAction();\r\n            this.recordBtn.style.color = \"white\";\r\n            clearInterval(this.oldActionFunction.redrawTimer);\r\n            this.oldActionFunction.redrawTimer = null;\r\n        }\r\n    },\r\n    createGraphs: function() {\r\n        this.createSummerizeGraph();\r\n        this.createLiveMfGraph();\r\n        this.isDataUpdated = false;\r\n    },\r\n    getParentOfChart: function(chartId) {\r\n        var chart = d3.select(\"#mftracking #\" + chartId);\r\n        if (!chart[0][0])\r\n            return;\r\n        return chart[0][0].parentNode;\r\n    },\r\n    toggleChart: function(chartId, sender) {\r\n        var container = this.getParentOfChart(chartId);\r\n        if (!container)\r\n            return;\r\n//        var allContainers=d3.select(\"#mftracking svg\");\r\n//        allContainers.style(\"display\",\"none\");\r\n        var curDisplay = container.style.display;\r\n        if (curDisplay === \"none\") {//if closed\r\n            sender && (sender.style.color = \"green\");\r\n            container.style.display = \"block\";\r\n        }\r\n        else {//if opened\r\n            sender && (sender.style.color = \"white\");\r\n            container.style.display = \"none\";\r\n        }\r\n    },\r\n    initGraph: function(config, parendNodeId, chartId, title) {\r\n        var margin = config.margin,\r\n        innerWidth = config.width - margin.left - margin.right,\r\n                innerHeight = config.height - margin.top - margin.bottom;\r\n        var existedChart = d3.select(\"#\" + chartId);\r\n        if (existedChart && existedChart[0][0] === null) {\r\n            var svg = d3.select(parendNodeId).append(\"svg\")\r\n                    .attr(\"width\", config.width)\r\n                    .style(\"left\",((-1)*config.width+200 )+ \"px\")\r\n                    .attr(\"height\", config.height)\r\n                    .style(\"top\",((-1)*config.height)+\"px\")\r\n                    .style(\"display\", \"none\")\r\n                    .call(config.tooltip);\r\n            svg.append(\"rect\")\r\n                    .attr(\"class\", \"background\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", 0)\r\n                    .attr(\"rx\", 3)\r\n                    .attr(\"ry\", 3)\r\n                    .attr(\"width\", config.width)\r\n                    .attr(\"height\", config.height);\r\n            //title\r\n            svg.append(\"text\")\r\n                    .attr(\"class\",\"title\")\r\n                    .attr(\"x\", innerWidth/2)\r\n                    .attr(\"y\", 40)\r\n                    .text(title);\r\n            var chart = svg.append(\"g\")\r\n                    .attr(\"id\", chartId)\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + (innerHeight + margin.top) + \") scale(1,-1)\");\r\n            chart.innerWidth = innerWidth;\r\n            chart.innerHeight = innerHeight;\r\n            return chart;\r\n        }\r\n        existedChart.innerWidth = innerWidth;\r\n        existedChart.innerHeight = innerHeight;\r\n        return existedChart;\r\n    },\r\n    createSummerizeGraph: function() {\r\n        var configObj = {\"width\": this.width, \"height\": this.height, \"tooltip\": this.summerizeTooltip};\r\n        configObj.margin={top: 60, right: 75, bottom: 30, left: 5};\r\n        var chart = this.initGraph(configObj, \"#mftracking\", this.summerizeChartId, \"Summary\");\r\n        if (this.isDataUpdated) {\r\n            this.updateSummerizedData(this.mfStatDict,\r\n                    configObj,\r\n                    this.displayProp,\r\n                    chart);\r\n        }\r\n        return chart;\r\n    },\r\n    createSummerizedToolTip: function() {\r\n        var displayProp = this.displayProp;\r\n        return d3.tip()\r\n                .attr('class', 'd3-tip')\r\n                .offset([00, 00])\r\n                .direction(\"s\")\r\n                .html(function(d) {\r\n                    return   \"<strong>Average latency: </strong> <span style='color:white'>\" + parseInt(displayProp(d)) + \" ms</span><br/>\"\r\n                            + \"<strong> Error percentage: </strong> <span style='color:red'>\" + parseInt(100 * (d.sumData.error / (d.sumData.error + d.sumData.success))) + \"%</span>\";\r\n                });\r\n    },\r\n    summerizeData: function(colData) {\r\n        var sum = {duration: 0, error: 0, success: 0, called_num: 0};\r\n        colData.forEach(function(aResult) {\r\n            sum.duration += (aResult.finish - aResult.start);\r\n            !aResult.success ? sum.error++ : sum.success++;\r\n            sum.called_num++;\r\n        });\r\n        return sum;\r\n    },\r\n    updateSummerizedData: function(mfStatDict, config, displayProp, chart) {\r\n        d3.selectAll(\".xAxis\").remove();\r\n        d3.selectAll(\".yAxis\").remove();\r\n        var summerizeData = this.summerizeData;\r\n        var statData = d3.entries(mfStatDict);//if the data manipulation takes too much time, think about use web worker here.\r\n        statData.forEach(function(dataForAMf) {\r\n            dataForAMf.sumData = summerizeData(dataForAMf.value);\r\n        });\r\n        function formatMiliSec(d) {\r\n            return d === 0 ? \"\" : d + \" ms\";\r\n        }\r\n        var data = statData.sort(function(e1, e2) {\r\n            return displayProp(e2) - displayProp(e1);\r\n        });\r\n        var innerWidth = chart.innerWidth,\r\n                innerHeight = chart.innerHeight;\r\n        var x = d3.scale.ordinal()\r\n                .domain(data.map(function(d) {\r\n                    return d[\"key\"].split(\".\")[1];\r\n                }))\r\n                .rangeRoundBands([0, innerWidth], 0.1, 0);\r\n\r\n\r\n        var xAxisFunc = d3.svg.axis()\r\n                .scale(x)\r\n                .orient(\"bottom\");\r\n        chart.append(\"g\")\r\n                .attr(\"class\", \"xAxis\")\r\n                .attr(\"transform\", \"translate(0,0) scale(1,-1)\")\r\n                .call(xAxisFunc);\r\n\r\n        var y = d3.scale.linear()\r\n                .domain([0, d3.max(statData, displayProp)])\r\n                .range([0, innerHeight]);\r\n        var yAxisFunc = d3.svg.axis()\r\n                .scale(y)\r\n                .tickSize(innerWidth + 20)\r\n                .tickFormat(formatMiliSec)\r\n                .orient(\"right\")\r\n                .ticks(10, \"ms\");\r\n        var barWidth = x.rangeBand();\r\n        //Join\r\n        var bar = chart.selectAll(\".bar\")\r\n                .data(data, function(d) {\r\n                    return d.key;\r\n                });\r\n        //Update\r\n        var barUpdate = bar.transition()\r\n                .attr(\"transform\", function(d, i) {\r\n                    return \"translate(\" + x(d.key.split(\".\")[1]) + \",0)\";\r\n                });\r\n        barUpdate.select(\"rect\")\r\n                .attr(\"width\", barWidth)\r\n                .attr(\"height\", function(d) {\r\n                    return y(displayProp(d));\r\n                });\r\n        //Enter\r\n        var barEnter = bar.enter().append(\"g\")\r\n                .attr(\"class\", \"bar\")\r\n                .attr(\"transform\", function(d, i) {\r\n                    return \"translate(\" + x(d.key.split(\".\")[1]) + \",0)\";\r\n                });\r\n        barEnter.append(\"rect\")\r\n                .attr(\"x\", 0)\r\n                .attr(\"y\", 0)\r\n                .attr(\"width\", barWidth)\r\n                .attr(\"height\", function(d) {\r\n                    return y(displayProp(d));\r\n                })\r\n                .on('mouseover', config.tooltip.show)\r\n                .on('mouseout', config.tooltip.hide);\r\n        //Exit\r\n        bar.exit().transition().remove();\r\n        var yAxis = chart.append(\"g\")\r\n                .attr(\"class\", \"yAxis\")\r\n                .call(yAxisFunc);\r\n        yAxis.selectAll(\"text\")\r\n                .attr(\"transform\", \"scale(1,-1)\");\r\n    },\r\n    createLiveMfTooltip: function() {\r\n        return d3.tip()\r\n                .attr('class', 'd3-tip')\r\n                .offset([00, 00])\r\n                .direction(\"s\")\r\n                .html(function(d) {\r\n                    return   \"<strong>Average latency: </strong> <span style='color:white'>\" + \" ms</span><br/>\";\r\n                });\r\n    },\r\n    createLiveMfGraph: function() {\r\n        var configObj = {\"width\": this.width, \"height\": this.height, \"tooltip\": this.liveMfTooltip};\r\n        configObj.margin={top: 80, right: 20, bottom: 20, left: 20};\r\n        var chart = this.initGraph(configObj, \"#mftracking\", this.liveMfChartId, \"Microflow Latency\");\r\n        if (this.isDataUpdated) {\r\n            this.updateLiveMfData(this.mfStatDict,\r\n                    configObj,\r\n                    chart);\r\n        }\r\n        return chart;\r\n    },\r\n    extractLiveItems: function(statData) {\r\n        var result = [];\r\n        statData.forEach(function(mfRecord) {\r\n            var mfName = mfRecord.key;\r\n            mfRecord.value.forEach(function(mf) {\r\n                result.push({\"mf\": mfName, \"value\": mf});\r\n            });\r\n        });\r\n        return result;\r\n        //output: mf: mfname, value: {start,finish,...}\r\n    },\r\n    updateLiveMfData: function(mfStatDict, config, chart) {\r\n        var statData = d3.entries(mfStatDict);\r\n        var data = this.extractLiveItems(statData).sort(function(e1,e2){\r\n                                                            return e1.value.start-e2.value.start;\r\n                                                        });//sort based on start value\r\n        if (data.length>21){\r\n            data.splice(0,data.length-21);\r\n        }\r\n        var     mfTitleWidth=100,//for mf name\r\n                marginLeft=10,\r\n                innerWidth=chart.innerWidth-mfTitleWidth-marginLeft,\r\n                innerHeight=chart.innerHeight;\r\n            \r\n        var x = d3.scale.linear()\r\n                .domain([0,d3.max(data,function(d){return d.value.finish-d.value.start;})])\r\n                .range([0,innerWidth]);\r\n        var mfHeight=15,\r\n            mfDis=4;\r\n        \r\n        var y = function(index){return innerHeight-(mfHeight+mfDis)*index;};\r\n        \r\n        var latencyMfFunc=function(d){\r\n            return x(d.value.finish-d.value.start);\r\n        };\r\n        //join\r\n        var liveMfs = chart.selectAll(\".livemf\")\r\n                .data(data, function(d) {\r\n                    return d.mf + d.value.start;\r\n                });\r\n        //Update\r\n        var liveMfUpdate = liveMfs.transition()\r\n                            .attr(\"transform\",function(d,i){return \"translate (\"+0+\",\"+y(i)+\")\";});\r\n        liveMfUpdate.select(\".bar\")\r\n                .attr(\"width\", latencyMfFunc);\r\n        //enter\r\n        var liveMfEnter = liveMfs.enter()\r\n                .append(\"g\")\r\n                .attr(\"class\",\"livemf\")\r\n                .attr(\"transform\",function(d,i){return \"translate (\"+0+\",\"+y(i)+\")\";});\r\n        liveMfEnter.append(\"rect\")//background\r\n                .attr(\"class\",\"livebackground\")\r\n                .attr(\"x\",0)\r\n                .attr(\"y\",0)\r\n                .attr(\"rx\", 3)\r\n                .attr(\"ry\", 3)\r\n                .attr(\"width\",chart.innerWidth)\r\n                .attr(\"height\",mfHeight+mfDis);\r\n        liveMfEnter.append(\"rect\")//bar\r\n                .attr(\"class\",\"bar\")\r\n                .attr(\"x\",   mfTitleWidth)\r\n                .attr(\"y\", mfDis/2)\r\n                .attr(\"rx\", 3)\r\n                .attr(\"ry\", 3)\r\n                .attr(\"width\", latencyMfFunc)\r\n                .attr(\"height\", mfHeight)\r\n                .style(\"fill\",function(d){return d.value.success? \"limegreen\": \"#CC0000\";});\r\n        liveMfEnter.append(\"text\")//text\r\n                .attr(\"x\", 0)\r\n                .attr(\"y\", (-1)*mfDis/2)\r\n                .attr(\"transform\",\"scale(1,-1)\")\r\n                .text(function(d){return d.mf.split(\".\")[1];});\r\n        liveMfEnter.append(\"title\")\r\n                .text(function(d){return (d.value.finish-d.value.start)+\" ms\";});\r\n        //detele\r\n        liveMfs.exit().transition().remove();\r\n    },\r\n    applyContext: function(context, callback) {\r\n        callback && callback();\r\n    },\r\n    overwriteFunc: function() {\r\n        this.overwriteMxCalls();\r\n        //this.overwriteOnError();\r\n        //this.overwriteConsoleError();\r\n    },\r\n    clearCollectedData: function() {\r\n        for (var mf in this.mfStatDict) {\r\n            delete this.mfStatDict[mf];\r\n        }\r\n        this.isDataUpdated = true;\r\n        this.earliestTime=null;\r\n        this.lastestTime=null;\r\n        this.createGraphs();\r\n    },\r\n    logMfActionResult: function(mf, startTime, endTime, resultLength, isSuccess) {\r\n        this.isDataUpdated = true;\r\n        if (this.earliestTime === null)\r\n            this.earliestTime = startTime;\r\n        if (this.lastestTime === null || this.lastestTime < endTime)\r\n            this.lastestTime = endTime;\r\n        if (!this.mfStatDict[mf]) {\r\n            this.mfStatDict[mf] = [];\r\n        }\r\n        this.mfStatDict[mf].push({start: startTime, finish: endTime, numOfObjs: resultLength, success: isSuccess});\r\n\r\n    },\r\n    overwriteMxDataAction: function() {\r\n        var _oldActionFunction = this.oldActionFunction.oldAction = mx.data.action;\r\n        this.oldActionFunction.isOverWritten = true;\r\n        var thisWidget = this;\r\n        mx.data.action = function(params) {\r\n            var startTime = (new Date()).getTime();//performance.now()\r\n            var mf = params.params.actionname;\r\n            if (params.params.actionname) {\r\n                var oldMfCallback = params.callback;\r\n                if (oldMfCallback) {\r\n                    params.callback = function(objs) {\r\n                        var endTime = (new Date()).getTime();\r\n                        thisWidget.logMfActionResult(mf, startTime, endTime, objs.length, true);\r\n                        return oldMfCallback.apply(this, arguments);\r\n                    };\r\n                }\r\n                var oldMfError = params.error;\r\n                if (oldMfError) {\r\n                    params.error = function(e) {\r\n                        var endTime = (new Date()).getTime();\r\n                        thisWidget.logMfActionResult(mf, startTime, endTime, null, false);\r\n                        return oldMfError.apply(this, arguments);\r\n                    };\r\n                }\r\n            }\r\n            return _oldActionFunction.apply(this, arguments);\r\n        };\r\n    },\r\n    resetMxDataAction: function() {\r\n        mx.data.action = this.oldActionFunction.oldAction;\r\n        this.oldActionFunction.isOverWritten = false;\r\n        this.oldActionFunction.oldAction = null;\r\n    },\r\n    overwriteOnError: function() {\r\n        var gOldOnError = window.onerror;\r\n        window.onerror = function(errorMsg, url, lineNumber, error) {\r\n            console.log(\"there is an error\");\r\n            console.log(\"send to server:\");\r\n            console.log(error);\r\n            if (gOldOnError)\r\n                return gOldOnError(errorMsg, url, lineNumber);\r\n            return false;\r\n        };\r\n    },\r\n    overwriteConsoleError: function() {\r\n        var olderrlogger = console.error;\r\n        console.error = function(e) {\r\n            olderrlogger(e);\r\n            console.log(\"send to server\");\r\n        };\r\n    },\r\n    overwriteMxCalls: function() {\r\n        this.overwriteMxDataAction();\r\n    },\r\n    destroyBtnHandlers: function() {\r\n        this.eventHandlers.forEach(function(handler) {\r\n            dojo.disconnect(handler);\r\n        });\r\n    },\r\n    uninitialize: function() {\r\n        this.destroyBtnHandlers();\r\n    }\r\n};\r\nmendix.widget.declare(\"mftracking.widget.mftracking\", mf);\r\n//todo: http://www.html5rocks.com/en/tutorials/webperformance/basics/#toc-introduction\r\n//http://ejohn.org/blog/accuracy-of-javascript-time/\r\n/*mfStatDict={\r\n mf1:[{start: 1,finish: 2, numOfObjs: 3, success: true},\r\n {start: 3,finish: 4, numOfObjs: 1, success: false},\r\n {start: 2,finish: 4, numOfObjs: 2, success: true}]\r\n mf2:[{start: 1,finish: 2, numOfObjs: 3, success: true},\r\n {start: 3,finish: 4, numOfObjs: 1, success: false},\r\n {start: 2,finish: 4, numOfObjs: 2, success: true}]\r\n }\r\n */"]}